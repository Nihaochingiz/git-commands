
git init
Команда git init создает репозиторий — директорию .git, 
которая содержит все необходимые для работы Git-файлы.

git status
С помощью команды git status 
можно посмотреть статус репозитория

Следующий шаг — это коммит. 
Под этим термином понимается окончательное 
добавление в репозиторий, когда Git запоминает файл 
навсегда и следит за всеми последующими изменениями.

git commit -m 'add README.md'

Делаем commit
Флаг -m означает message

 git push

 Отправляем изменения в созданный репозиторий

 git clone
 
 Клонировать репозиторий 

 git pull --rebase

 Скачать из внешнего репозитория 
 новые коммиты и добавить их в локальный репозиторийgit remote add origin https://github.com/Nihaochingiz/git-commands.git
git branch -M main
git push -u origin main
  


$ git clone repos/git-user code-user
# Первый параметр «откуда», второй — «куда» клонировать репозиторий



## Как запушить два файла в git
git add file1 file2
git status
git config --global user.email "mail@example.com"
git config --global user.name "name"
git commit -m 'Изменили два файла'
git push
##


rm PEOPLE.md

Удаляем файлы

git restore PEOPLE.md

Восстановить файл после удаления

// Как удалить файл из рабочей директории
rm PEOPLE.md
# Любое изменение нужно добавлять в индекс
git add PEOPLE.md
git commit -m 'remove PEOPLE.md'

[main e15afd2] remove PEOPLE.md
1 file changed, 1 deletion(-)
delete mode 100644 PEOPLE.md
# Теперь этот файл пропал из рабочей директории


//у Git есть команда git rm, которая объединяет в себе удаление и подготовку к коммиту:
//git rm PEOPLE.md
# Равносильно rm + git add

git diff

Посмотреть изменения в файлах 

git diff --staged

Вывести все изменения, сделанные в рабочей директории
которые были добавлены в индекс

git mv OLD-FILENAME NEW-FILENAME

Переименовать файл


git mv newhexlet.txt hexlet2.txt 

git log

Показать список всех выполненных коммитов, 
отсортированных по дате добавления

git log -p

 флаг -p, который сразу выводит диф для каждого коммита:

git log
Ввести Q и нажать Enter
Выйти из git log

git show

У каждого коммита есть уникальный набор символов — идентификатор (еще говорят «хеш»). 
С помощью хеша можно посмотреть все изменения, сделанные в рамках одного коммита

git show 5120bea

Хеши коммитов в Git очень длинные, и ими бывает неудобно пользоваться. 
Поэтому разработчики Git добавили возможность указывать только часть хеша. 
Достаточно взять первые семь символов и подставить их в ту команду, которая работает с коммитами:


git blame <путь до файла>.

Узнать кто последним менял конкретную строчку в файле


 git grep
 /** Пример git grep Посмотреть
     Пример git grep -i  посмотреть 
     // флаг -i не учитывать регистр
**/
 Команда git grep ищет совпадение с указанной строкой во всех файлах проекта. 
 Это очень удобная команда для быстрого анализа из терминала. 
 Она удобнее обычного grep, потому что знает про игнорирование и не смотрит в директорию .git, а еще умеет искать по истории


 mkdir one
 touch two

Создать папку и файл

git clean -fd
неотслеживаемые файлы невозможно восстановить, 
у них нет старого состояния
Выполняем очистку
(-f – force, -d – directory)

 git restore

 Отмена изменений в отслеживаемых файлах

 git restore --staged <file>

 Отменить индексацию, 
 но не отменять изменения, 
 сделанные в файле

 git restore <file>

 Для файлов Измененных в рабочей директории